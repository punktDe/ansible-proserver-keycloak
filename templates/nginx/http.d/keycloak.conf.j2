{% if dehydrated | cert_exists(keycloak.domain) %}
server {
  listen 0.0.0.0:80;
  listen [::]:80;
  {% if ansible_local.proserver.routing.with_gate64 -%}
  listen [::]:87 proxy_protocol;
  {% endif %}
  server_name {{ keycloak.domain }};

  root /var/null;

  location / {
    return 301 https://$host$request_uri;
  }

  include {{ nginx.prefix.config }}/include/letsencrypt.conf;
}

server {
  listen 0.0.0.0:443 ssl http2;
  listen [::]:443 ssl http2;
  server_name {{ keycloak.domain }};

  {% if ansible_local.proserver.routing.with_gate64 -%}
  listen [::1]:57 ssl http2 proxy_protocol;
  port_in_redirect off;
  {% endif %}

  {% if nginx.modsecurity is defined and nginx.modsecurity.enabled %}
  include {{ nginx.prefix.config }}/include/modsecurity.conf;
  {% endif %}

  {% for header, value in keycloak.custom_headers.items() %}
  {% if value is iterable and value is not a string %}
  {% set endvalue = value | join(",") %}
  {% elif value is boolean %}
  {% set endvalue = value | lower %}
  {% else %}
  {% set endvalue = value %}
  add_header {{ header | replace("_", "-") }} {{ endvalue }};
  {% endfor %}

  {% if keycloak.redirect_admin %}
    location = / {
        return 301 admin/master/console/;
    }
  {% endif %}

  location / {
      proxy_set_header    Host               $host;
      proxy_set_header    X-Real-IP          $remote_addr;
      proxy_set_header    Accept-Encoding    *;
      proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_set_header    X-Forwarded-Host   $host;
      proxy_set_header    X-Forwarded-Server $host;
      proxy_set_header    X-Forwarded-Port   443;
      proxy_set_header    X-Forwarded-Proto  $scheme;
      proxy_buffer_size          128k;
      proxy_buffers              4 256k;
      proxy_busy_buffers_size    256k;
      proxy_pass http://127.0.0.1:{{ keycloak.config.http_port }};
  }

  ssl_certificate {{ dehydrated| cert_fullchain(keycloak.domain) }};
  ssl_certificate_key {{ dehydrated| cert_privkey(keycloak.domain) }};
  ssl_trusted_certificate {{ dehydrated | cert_chain(keycloak.domain) }};
  include {{ nginx.prefix.config }}/include/https_params.conf;
}
{% else %}
server {
    listen 0.0.0.0:80;
    listen [::]:80;
    {% if ansible_local.proserver|default(none) and ansible_local.proserver.routing.with_gate64 -%}
    listen [::1]:87 proxy_protocol;
    {%- endif %}

    server_name {{ keycloak.domain }};

    root /var/null;

    location ^~ /.well-known/acme-challenge/ {
        # No need to redirect ACME challenge requests
        allow all;
        root {{ dehydrated.config.WELLKNOWN }};
    }

}
{% endif %}
